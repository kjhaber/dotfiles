set -g default-terminal "screen-256color"
if-shell "type 'reattach-to-user-namespace' >/dev/null" "set -g default-command 'reattach-to-user-namespace -l $SHELL'"

# soften status bar color
set -g status-bg '#017f00'
set -g status-fg '#efefef'

# change action key from ctrl-b to `
unbind C-b
set-option -g prefix `
bind ` send-prefix

# start window numbering from 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

set -g history-limit 50000
set -g display-time 3000

# open new windows in current path, not directory where session was started
bind c new-window -c "#{pane_current_path}"

# split panes using | and -
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# switch panes using Alt-arrow and Alt-vim directions without prefix
bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# also switch panes using vim-style selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# With vim-tmux-navigator, <ctrl-l> is mapped to change to panel on right
# rather than default redraw screen.  Add mapping so redraw screen can be done
# with <tmux-prefix><ctrl-L>.
bind C-l send-keys 'C-l'

# swap open windows
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

# clear scrollback buffer
# (adapted from http://notes.jerzygangi.com/the-only-way-that-actually-works-to-clear-the-screen-in-tmux/)
bind-key C-k send-keys -R \; send-keys C-l \; clear-history

# create new window and immediately prompt for name (wish it could be shift-c, but this will do)
bind C-c new-window \; command-prompt -I '' "rename-window '%%'"

# enable mouse control (clickable windows, panes, resizeable panes)
set -g mouse on

setw -g mode-keys vi

# enable focus events (fix up certain vim behavior, see https://github.com/tmux-plugins/vim-tmux-focus-events )
set -g focus-events on

# vi-style copying
# use 'y' to copy to system clipboard (Mac only), Enter still uses tmux's register only
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Y send-keys -X copy-end-of-line
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
if-shell "type 'reattach-to-user-namespace' >/dev/null" \
  "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"

# scroll wheel (https://github.com/tmux/tmux/issues/145)
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string "#{session_name} - #{host}"
set-option -g renumber-windows on

# reload tmux config
bind r source-file ~/.tmux.conf

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# make vim ESC work immediately, not after a half-second delay
set -sg escape-time 0


# tmux plugins
# Do `git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm` first
# Then `<tmux>-I` within tmux session to install
#
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Smart pane switching with awareness of vim splits
# (BTW, in iTerm2, be sure to map Ctrl-H to send escape sequence [104;5u
# This is CSI code for otherwise terminal will send <BS> key, which won't trigger
# Ctrl-H mappings.  See also https://gitlab.com/gnachman/iterm2/issues/3519 )
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @shell_mode 'vi'
set -g @sidebar-tree-command 'tree -C'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

