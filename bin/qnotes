#!/bin/sh

# qnotes
#
# Short for "quick notes". Efficiently capture short timestamped messages (e.g.
# for vimwiki diary) interactively.

set -e

DRYRUN=0
while true; do
  case "$1" in
    --dryrun) DRYRUN=1; shift ;;
    *) break ;;
  esac
done

if [ -z "$QNOTES_DIR" ]; then
  echo "QNOTES_DIR is not set.  Set the QNOTES_DIR env variable to the path where session events will be written."
  exit 1
fi

if [ "$DRYRUN" == 1 ]; then
  echo "(Dryrun mode enabled - not really writing files or creating directories)"
fi

updateTimestamp() {
  TIMESTAMP_FILENAME=$(/bin/date +%Y-%m-%d_%H%M%S)
  TIMESTAMP_CONTENT=$(/bin/date +%H:%M)
}

updateTimestamp
QNOTES_SESSION_DIR="$QNOTES_DIR/session_$TIMESTAMP_FILENAME"
echo "qnotes session directory: $QNOTES_SESSION_DIR"
if [ "$DRYRUN" != 1 ]; then
  mkdir -p "$QNOTES_SESSION_DIR"
  if [ -e "$QNOTES_DIR/latest_session" ]; then
    rm "$QNOTES_DIR/latest_session"
  fi
  ln -s "$QNOTES_SESSION_DIR" "$QNOTES_DIR/latest_session"
fi

while true; do
  printf '> '
  read line
  LINE_LEN="${#line}"
  if [ $LINE_LEN -gt 0 ]; then
    updateTimestamp
    printf '  ... writing %s (%s chars)' "$QNOTES_SESSION_DIR/$TIMESTAMP_FILENAME" "${#line}" 
    if [ "$DRYRUN" != 1 ]; then
      printf '[%s] %s\n' "$TIMESTAMP_CONTENT" "$line"  > "$QNOTES_SESSION_DIR/$TIMESTAMP_FILENAME"
    else
      printf ' [not really]'
    fi
    printf '\n'
  fi
done

